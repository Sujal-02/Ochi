{"ast":null,"code":"function clamp(t, i, e) {\n  return Math.max(t, Math.min(i, e));\n}\nclass Animate {\n  constructor() {\n    this.isRunning = !1, this.value = 0, this.from = 0, this.to = 0, this.duration = 0, this.currentTime = 0;\n  }\n  advance(t) {\n    var i;\n    if (!this.isRunning) return;\n    let e = !1;\n    if (this.duration && this.easing) {\n      this.currentTime += t;\n      const i = clamp(0, this.currentTime / this.duration, 1);\n      e = i >= 1;\n      const s = e ? 1 : this.easing(i);\n      this.value = this.from + (this.to - this.from) * s;\n    } else this.lerp ? (this.value = function damp(t, i, e, s) {\n      return function lerp(t, i, e) {\n        return (1 - e) * t + e * i;\n      }(t, i, 1 - Math.exp(-e * s));\n    }(this.value, this.to, 60 * this.lerp, t), Math.round(this.value) === this.to && (this.value = this.to, e = !0)) : (this.value = this.to, e = !0);\n    e && this.stop(), null === (i = this.onUpdate) || void 0 === i || i.call(this, this.value, e);\n  }\n  stop() {\n    this.isRunning = !1;\n  }\n  fromTo(t, i, _ref) {\n    let {\n      lerp: e,\n      duration: s,\n      easing: o,\n      onStart: n,\n      onUpdate: l\n    } = _ref;\n    this.from = this.value = t, this.to = i, this.lerp = e, this.duration = s, this.easing = o, this.currentTime = 0, this.isRunning = !0, null == n || n(), this.onUpdate = l;\n  }\n}\nclass Dimensions {\n  constructor() {\n    let {\n      wrapper: t,\n      content: i,\n      autoResize: e = !0,\n      debounce: s = 250\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.width = 0, this.height = 0, this.scrollWidth = 0, this.scrollHeight = 0, this.resize = () => {\n      this.onWrapperResize(), this.onContentResize();\n    }, this.onWrapperResize = () => {\n      this.wrapper === window ? (this.width = window.innerWidth, this.height = window.innerHeight) : this.wrapper instanceof HTMLElement && (this.width = this.wrapper.clientWidth, this.height = this.wrapper.clientHeight);\n    }, this.onContentResize = () => {\n      this.wrapper === window ? (this.scrollHeight = this.content.scrollHeight, this.scrollWidth = this.content.scrollWidth) : this.wrapper instanceof HTMLElement && (this.scrollHeight = this.wrapper.scrollHeight, this.scrollWidth = this.wrapper.scrollWidth);\n    }, this.wrapper = t, this.content = i, e && (this.debouncedResize = function debounce(t, i) {\n      let e;\n      return function () {\n        let s = arguments,\n          o = this;\n        clearTimeout(e), e = setTimeout(function () {\n          t.apply(o, s);\n        }, i);\n      };\n    }(this.resize, s), this.wrapper === window ? window.addEventListener(\"resize\", this.debouncedResize, !1) : (this.wrapperResizeObserver = new ResizeObserver(this.debouncedResize), this.wrapperResizeObserver.observe(this.wrapper)), this.contentResizeObserver = new ResizeObserver(this.debouncedResize), this.contentResizeObserver.observe(this.content)), this.resize();\n  }\n  destroy() {\n    var t, i;\n    null === (t = this.wrapperResizeObserver) || void 0 === t || t.disconnect(), null === (i = this.contentResizeObserver) || void 0 === i || i.disconnect(), window.removeEventListener(\"resize\", this.debouncedResize, !1);\n  }\n  get limit() {\n    return {\n      x: this.scrollWidth - this.width,\n      y: this.scrollHeight - this.height\n    };\n  }\n}\nclass Emitter {\n  constructor() {\n    this.events = {};\n  }\n  emit(t) {\n    let e = this.events[t] || [];\n    for (var _len = arguments.length, i = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      i[_key - 1] = arguments[_key];\n    }\n    for (let t = 0, s = e.length; t < s; t++) e[t](...i);\n  }\n  on(t, i) {\n    var e;\n    return (null === (e = this.events[t]) || void 0 === e ? void 0 : e.push(i)) || (this.events[t] = [i]), () => {\n      var e;\n      this.events[t] = null === (e = this.events[t]) || void 0 === e ? void 0 : e.filter(t => i !== t);\n    };\n  }\n  off(t, i) {\n    var e;\n    this.events[t] = null === (e = this.events[t]) || void 0 === e ? void 0 : e.filter(t => i !== t);\n  }\n  destroy() {\n    this.events = {};\n  }\n}\nconst t = 100 / 6;\nclass VirtualScroll {\n  constructor(i, _ref2) {\n    let {\n      wheelMultiplier: e = 1,\n      touchMultiplier: s = 1\n    } = _ref2;\n    this.lastDelta = {\n      x: 0,\n      y: 0\n    }, this.windowWidth = 0, this.windowHeight = 0, this.onTouchStart = t => {\n      const {\n        clientX: i,\n        clientY: e\n      } = t.targetTouches ? t.targetTouches[0] : t;\n      this.touchStart.x = i, this.touchStart.y = e, this.lastDelta = {\n        x: 0,\n        y: 0\n      }, this.emitter.emit(\"scroll\", {\n        deltaX: 0,\n        deltaY: 0,\n        event: t\n      });\n    }, this.onTouchMove = t => {\n      var i, e, s, o;\n      const {\n          clientX: n,\n          clientY: l\n        } = t.targetTouches ? t.targetTouches[0] : t,\n        r = -(n - (null !== (e = null === (i = this.touchStart) || void 0 === i ? void 0 : i.x) && void 0 !== e ? e : 0)) * this.touchMultiplier,\n        h = -(l - (null !== (o = null === (s = this.touchStart) || void 0 === s ? void 0 : s.y) && void 0 !== o ? o : 0)) * this.touchMultiplier;\n      this.touchStart.x = n, this.touchStart.y = l, this.lastDelta = {\n        x: r,\n        y: h\n      }, this.emitter.emit(\"scroll\", {\n        deltaX: r,\n        deltaY: h,\n        event: t\n      });\n    }, this.onTouchEnd = t => {\n      this.emitter.emit(\"scroll\", {\n        deltaX: this.lastDelta.x,\n        deltaY: this.lastDelta.y,\n        event: t\n      });\n    }, this.onWheel = i => {\n      let {\n        deltaX: e,\n        deltaY: s,\n        deltaMode: o\n      } = i;\n      e *= 1 === o ? t : 2 === o ? this.windowWidth : 1, s *= 1 === o ? t : 2 === o ? this.windowHeight : 1, e *= this.wheelMultiplier, s *= this.wheelMultiplier, this.emitter.emit(\"scroll\", {\n        deltaX: e,\n        deltaY: s,\n        event: i\n      });\n    }, this.onWindowResize = () => {\n      this.windowWidth = window.innerWidth, this.windowHeight = window.innerHeight;\n    }, this.element = i, this.wheelMultiplier = e, this.touchMultiplier = s, this.touchStart = {\n      x: null,\n      y: null\n    }, this.emitter = new Emitter(), window.addEventListener(\"resize\", this.onWindowResize, !1), this.onWindowResize(), this.element.addEventListener(\"wheel\", this.onWheel, {\n      passive: !1\n    }), this.element.addEventListener(\"touchstart\", this.onTouchStart, {\n      passive: !1\n    }), this.element.addEventListener(\"touchmove\", this.onTouchMove, {\n      passive: !1\n    }), this.element.addEventListener(\"touchend\", this.onTouchEnd, {\n      passive: !1\n    });\n  }\n  on(t, i) {\n    return this.emitter.on(t, i);\n  }\n  destroy() {\n    this.emitter.destroy(), window.removeEventListener(\"resize\", this.onWindowResize, !1), this.element.removeEventListener(\"wheel\", this.onWheel), this.element.removeEventListener(\"touchstart\", this.onTouchStart), this.element.removeEventListener(\"touchmove\", this.onTouchMove), this.element.removeEventListener(\"touchend\", this.onTouchEnd);\n  }\n}\nclass Lenis {\n  constructor() {\n    let {\n      wrapper: t = window,\n      content: i = document.documentElement,\n      wheelEventsTarget: e = t,\n      eventsTarget: s = e,\n      smoothWheel: o = !0,\n      syncTouch: n = !1,\n      syncTouchLerp: l = .075,\n      touchInertiaMultiplier: r = 35,\n      duration: h,\n      easing: a = t => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n      lerp: c = .1,\n      infinite: d = !1,\n      orientation: u = \"vertical\",\n      gestureOrientation: p = \"vertical\",\n      touchMultiplier: m = 1,\n      wheelMultiplier: v = 1,\n      autoResize: g = !0,\n      prevent: w,\n      virtualScroll: S,\n      __experimental__naiveDimensions: f = !1\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.__isScrolling = !1, this.__isStopped = !1, this.__isLocked = !1, this.userData = {}, this.lastVelocity = 0, this.velocity = 0, this.direction = 0, this.onPointerDown = t => {\n      1 === t.button && this.reset();\n    }, this.onVirtualScroll = t => {\n      if (\"function\" == typeof this.options.virtualScroll && !1 === this.options.virtualScroll(t)) return;\n      const {\n        deltaX: i,\n        deltaY: e,\n        event: s\n      } = t;\n      if (this.emitter.emit(\"virtual-scroll\", {\n        deltaX: i,\n        deltaY: e,\n        event: s\n      }), s.ctrlKey) return;\n      const o = s.type.includes(\"touch\"),\n        n = s.type.includes(\"wheel\");\n      this.isTouching = \"touchstart\" === s.type || \"touchmove\" === s.type;\n      if (this.options.syncTouch && o && \"touchstart\" === s.type && !this.isStopped && !this.isLocked) return void this.reset();\n      const l = 0 === i && 0 === e,\n        r = \"vertical\" === this.options.gestureOrientation && 0 === e || \"horizontal\" === this.options.gestureOrientation && 0 === i;\n      if (l || r) return;\n      let h = s.composedPath();\n      h = h.slice(0, h.indexOf(this.rootElement));\n      const a = this.options.prevent;\n      if (h.find(t => {\n        var i, e, s, l, r;\n        return t instanceof Element && (\"function\" == typeof a && (null == a ? void 0 : a(t)) || (null === (i = t.hasAttribute) || void 0 === i ? void 0 : i.call(t, \"data-lenis-prevent\")) || o && (null === (e = t.hasAttribute) || void 0 === e ? void 0 : e.call(t, \"data-lenis-prevent-touch\")) || n && (null === (s = t.hasAttribute) || void 0 === s ? void 0 : s.call(t, \"data-lenis-prevent-wheel\")) || (null === (l = t.classList) || void 0 === l ? void 0 : l.contains(\"lenis\")) && !(null === (r = t.classList) || void 0 === r ? void 0 : r.contains(\"lenis-stopped\")));\n      })) return;\n      if (this.isStopped || this.isLocked) return void s.preventDefault();\n      if (!(this.options.syncTouch && o || this.options.smoothWheel && n)) return this.isScrolling = \"native\", void this.animate.stop();\n      s.preventDefault();\n      let c = e;\n      \"both\" === this.options.gestureOrientation ? c = Math.abs(e) > Math.abs(i) ? e : i : \"horizontal\" === this.options.gestureOrientation && (c = i);\n      const d = o && this.options.syncTouch,\n        u = o && \"touchend\" === s.type && Math.abs(c) > 5;\n      u && (c = this.velocity * this.options.touchInertiaMultiplier), this.scrollTo(this.targetScroll + c, Object.assign({\n        programmatic: !1\n      }, d ? {\n        lerp: u ? this.options.syncTouchLerp : 1\n      } : {\n        lerp: this.options.lerp,\n        duration: this.options.duration,\n        easing: this.options.easing\n      }));\n    }, this.onNativeScroll = () => {\n      if (clearTimeout(this.__resetVelocityTimeout), delete this.__resetVelocityTimeout, this.__preventNextNativeScrollEvent) delete this.__preventNextNativeScrollEvent;else if (!1 === this.isScrolling || \"native\" === this.isScrolling) {\n        const t = this.animatedScroll;\n        this.animatedScroll = this.targetScroll = this.actualScroll, this.lastVelocity = this.velocity, this.velocity = this.animatedScroll - t, this.direction = Math.sign(this.animatedScroll - t), this.isScrolling = \"native\", this.emit(), 0 !== this.velocity && (this.__resetVelocityTimeout = setTimeout(() => {\n          this.lastVelocity = this.velocity, this.velocity = 0, this.isScrolling = !1, this.emit();\n        }, 400));\n      }\n    }, window.lenisVersion = \"1.1.9\", t && t !== document.documentElement && t !== document.body || (t = window), this.options = {\n      wrapper: t,\n      content: i,\n      wheelEventsTarget: e,\n      eventsTarget: s,\n      smoothWheel: o,\n      syncTouch: n,\n      syncTouchLerp: l,\n      touchInertiaMultiplier: r,\n      duration: h,\n      easing: a,\n      lerp: c,\n      infinite: d,\n      gestureOrientation: p,\n      orientation: u,\n      touchMultiplier: m,\n      wheelMultiplier: v,\n      autoResize: g,\n      prevent: w,\n      virtualScroll: S,\n      __experimental__naiveDimensions: f\n    }, this.animate = new Animate(), this.emitter = new Emitter(), this.dimensions = new Dimensions({\n      wrapper: t,\n      content: i,\n      autoResize: g\n    }), this.updateClassName(), this.userData = {}, this.time = 0, this.velocity = this.lastVelocity = 0, this.isLocked = !1, this.isStopped = !1, this.isScrolling = !1, this.targetScroll = this.animatedScroll = this.actualScroll, this.options.wrapper.addEventListener(\"scroll\", this.onNativeScroll, !1), this.options.wrapper.addEventListener(\"pointerdown\", this.onPointerDown, !1), this.virtualScroll = new VirtualScroll(s, {\n      touchMultiplier: m,\n      wheelMultiplier: v\n    }), this.virtualScroll.on(\"scroll\", this.onVirtualScroll);\n  }\n  destroy() {\n    this.emitter.destroy(), this.options.wrapper.removeEventListener(\"scroll\", this.onNativeScroll, !1), this.options.wrapper.removeEventListener(\"pointerdown\", this.onPointerDown, !1), this.virtualScroll.destroy(), this.dimensions.destroy(), this.cleanUpClassName();\n  }\n  on(t, i) {\n    return this.emitter.on(t, i);\n  }\n  off(t, i) {\n    return this.emitter.off(t, i);\n  }\n  setScroll(t) {\n    this.isHorizontal ? this.rootElement.scrollLeft = t : this.rootElement.scrollTop = t;\n  }\n  resize() {\n    this.dimensions.resize();\n  }\n  emit() {\n    this.emitter.emit(\"scroll\", this);\n  }\n  reset() {\n    this.isLocked = !1, this.isScrolling = !1, this.animatedScroll = this.targetScroll = this.actualScroll, this.lastVelocity = this.velocity = 0, this.animate.stop();\n  }\n  start() {\n    this.isStopped && (this.isStopped = !1, this.reset());\n  }\n  stop() {\n    this.isStopped || (this.isStopped = !0, this.animate.stop(), this.reset());\n  }\n  raf(t) {\n    const i = t - (this.time || t);\n    this.time = t, this.animate.advance(.001 * i);\n  }\n  scrollTo(t) {\n    let {\n      offset: i = 0,\n      immediate: e = !1,\n      lock: s = !1,\n      duration: o = this.options.duration,\n      easing: n = this.options.easing,\n      lerp: l = this.options.lerp,\n      onStart: r,\n      onComplete: h,\n      force: a = !1,\n      programmatic: c = !0,\n      userData: d = {}\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!this.isStopped && !this.isLocked || a) {\n      if (\"string\" == typeof t && [\"top\", \"left\", \"start\"].includes(t)) t = 0;else if (\"string\" == typeof t && [\"bottom\", \"right\", \"end\"].includes(t)) t = this.limit;else {\n        let e;\n        if (\"string\" == typeof t ? e = document.querySelector(t) : t instanceof HTMLElement && (null == t ? void 0 : t.nodeType) && (e = t), e) {\n          if (this.options.wrapper !== window) {\n            const t = this.rootElement.getBoundingClientRect();\n            i -= this.isHorizontal ? t.left : t.top;\n          }\n          const s = e.getBoundingClientRect();\n          t = (this.isHorizontal ? s.left : s.top) + this.animatedScroll;\n        }\n      }\n      if (\"number\" == typeof t && (t += i, t = Math.round(t), this.options.infinite ? c && (this.targetScroll = this.animatedScroll = this.scroll) : t = clamp(0, t, this.limit), t !== this.targetScroll)) {\n        if (this.userData = d, e) return this.animatedScroll = this.targetScroll = t, this.setScroll(this.scroll), this.reset(), this.preventNextNativeScrollEvent(), this.emit(), null == h || h(this), void (this.userData = {});\n        c || (this.targetScroll = t), this.animate.fromTo(this.animatedScroll, t, {\n          duration: o,\n          easing: n,\n          lerp: l,\n          onStart: () => {\n            s && (this.isLocked = !0), this.isScrolling = \"smooth\", null == r || r(this);\n          },\n          onUpdate: (t, i) => {\n            this.isScrolling = \"smooth\", this.lastVelocity = this.velocity, this.velocity = t - this.animatedScroll, this.direction = Math.sign(this.velocity), this.animatedScroll = t, this.setScroll(this.scroll), c && (this.targetScroll = t), i || this.emit(), i && (this.reset(), this.emit(), null == h || h(this), this.userData = {}, this.preventNextNativeScrollEvent());\n          }\n        });\n      }\n    }\n  }\n  preventNextNativeScrollEvent() {\n    this.__preventNextNativeScrollEvent = !0, requestAnimationFrame(() => {\n      delete this.__preventNextNativeScrollEvent;\n    });\n  }\n  get rootElement() {\n    return this.options.wrapper === window ? document.documentElement : this.options.wrapper;\n  }\n  get limit() {\n    return this.options.__experimental__naiveDimensions ? this.isHorizontal ? this.rootElement.scrollWidth - this.rootElement.clientWidth : this.rootElement.scrollHeight - this.rootElement.clientHeight : this.dimensions.limit[this.isHorizontal ? \"x\" : \"y\"];\n  }\n  get isHorizontal() {\n    return \"horizontal\" === this.options.orientation;\n  }\n  get actualScroll() {\n    return this.isHorizontal ? this.rootElement.scrollLeft : this.rootElement.scrollTop;\n  }\n  get scroll() {\n    return this.options.infinite ? function modulo(t, i) {\n      return (t % i + i) % i;\n    }(this.animatedScroll, this.limit) : this.animatedScroll;\n  }\n  get progress() {\n    return 0 === this.limit ? 1 : this.scroll / this.limit;\n  }\n  get isScrolling() {\n    return this.__isScrolling;\n  }\n  set isScrolling(t) {\n    this.__isScrolling !== t && (this.__isScrolling = t, this.updateClassName());\n  }\n  get isStopped() {\n    return this.__isStopped;\n  }\n  set isStopped(t) {\n    this.__isStopped !== t && (this.__isStopped = t, this.updateClassName());\n  }\n  get isLocked() {\n    return this.__isLocked;\n  }\n  set isLocked(t) {\n    this.__isLocked !== t && (this.__isLocked = t, this.updateClassName());\n  }\n  get isSmooth() {\n    return \"smooth\" === this.isScrolling;\n  }\n  get className() {\n    let t = \"lenis\";\n    return this.isStopped && (t += \" lenis-stopped\"), this.isLocked && (t += \" lenis-locked\"), this.isScrolling && (t += \" lenis-scrolling\"), \"smooth\" === this.isScrolling && (t += \" lenis-smooth\"), t;\n  }\n  updateClassName() {\n    this.cleanUpClassName(), this.rootElement.className = \"\".concat(this.rootElement.className, \" \").concat(this.className).trim();\n  }\n  cleanUpClassName() {\n    this.rootElement.className = this.rootElement.className.replace(/lenis(-\\w+)?/g, \"\").trim();\n  }\n}\nexport { Lenis as default };","map":{"version":3,"names":["clamp","t","i","e","Math","max","min","Animate","constructor","isRunning","value","from","to","duration","currentTime","advance","easing","s","lerp","damp","exp","round","stop","onUpdate","call","fromTo","_ref","o","onStart","n","l","Dimensions","wrapper","content","autoResize","debounce","arguments","length","undefined","width","height","scrollWidth","scrollHeight","resize","onWrapperResize","onContentResize","window","innerWidth","innerHeight","HTMLElement","clientWidth","clientHeight","debouncedResize","clearTimeout","setTimeout","apply","addEventListener","wrapperResizeObserver","ResizeObserver","observe","contentResizeObserver","destroy","disconnect","removeEventListener","limit","x","y","Emitter","events","emit","_len","Array","_key","on","push","filter","off","VirtualScroll","_ref2","wheelMultiplier","touchMultiplier","lastDelta","windowWidth","windowHeight","onTouchStart","clientX","clientY","targetTouches","touchStart","emitter","deltaX","deltaY","event","onTouchMove","r","h","onTouchEnd","onWheel","deltaMode","onWindowResize","element","passive","Lenis","document","documentElement","wheelEventsTarget","eventsTarget","smoothWheel","syncTouch","syncTouchLerp","touchInertiaMultiplier","a","pow","c","infinite","d","orientation","u","gestureOrientation","p","m","v","g","prevent","w","virtualScroll","S","__experimental__naiveDimensions","f","__isScrolling","__isStopped","__isLocked","userData","lastVelocity","velocity","direction","onPointerDown","button","reset","onVirtualScroll","options","ctrlKey","type","includes","isTouching","isStopped","isLocked","composedPath","slice","indexOf","rootElement","find","Element","hasAttribute","classList","contains","preventDefault","isScrolling","animate","abs","scrollTo","targetScroll","Object","assign","programmatic","onNativeScroll","__resetVelocityTimeout","__preventNextNativeScrollEvent","animatedScroll","actualScroll","sign","lenisVersion","body","dimensions","updateClassName","time","cleanUpClassName","setScroll","isHorizontal","scrollLeft","scrollTop","start","raf","offset","immediate","lock","onComplete","force","querySelector","nodeType","getBoundingClientRect","left","top","scroll","preventNextNativeScrollEvent","requestAnimationFrame","modulo","progress","isSmooth","className","concat","trim","replace","default"],"sources":["C:\\Users\\kawar\\Desktop\\CANONLBP2900\\Bhagylakshmi\\Sujal\\Projects\\React\\ochi\\node_modules\\lenis\\src\\maths.js","C:\\Users\\kawar\\Desktop\\CANONLBP2900\\Bhagylakshmi\\Sujal\\Projects\\React\\ochi\\node_modules\\src\\animate.ts","C:\\Users\\kawar\\Desktop\\CANONLBP2900\\Bhagylakshmi\\Sujal\\Projects\\React\\ochi\\node_modules\\src\\dimensions.ts","C:\\Users\\kawar\\Desktop\\CANONLBP2900\\Bhagylakshmi\\Sujal\\Projects\\React\\ochi\\node_modules\\lenis\\src\\debounce.js","C:\\Users\\kawar\\Desktop\\CANONLBP2900\\Bhagylakshmi\\Sujal\\Projects\\React\\ochi\\node_modules\\src\\emitter.ts","C:\\Users\\kawar\\Desktop\\CANONLBP2900\\Bhagylakshmi\\Sujal\\Projects\\React\\ochi\\node_modules\\src\\virtual-scroll.ts","C:\\Users\\kawar\\Desktop\\CANONLBP2900\\Bhagylakshmi\\Sujal\\Projects\\React\\ochi\\node_modules\\src\\index.ts"],"sourcesContent":["// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n","import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  isRunning: boolean = false\r\n  value: number = 0\r\n  from: number = 0\r\n  to: number = 0\r\n  lerp?: number\r\n  duration?: number = 0\r\n  easing?: Function\r\n  currentTime: number = 0\r\n  onUpdate?: Function\r\n\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime: number) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.duration && this.easing) {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    } else if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      // If no easing or lerp, just jump to the end value\r\n      this.value = this.to\r\n      completed = true\r\n    }\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, completed)\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(\r\n    from: number,\r\n    to: number,\r\n    {\r\n      lerp,\r\n      duration,\r\n      easing,\r\n      onStart,\r\n      onUpdate,\r\n    }: {\r\n      lerp?: number\r\n      duration?: number\r\n      easing?: Function\r\n      onStart?: Function\r\n      onUpdate?: Function\r\n    }\r\n  ) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    onStart?.()\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n","import { debounce } from './debounce'\r\n\r\ntype DimensionsOptions = {\r\n  wrapper: Window | HTMLElement\r\n  content: HTMLElement\r\n  autoResize?: boolean\r\n  debounce?: number\r\n}\r\n\r\nexport class Dimensions {\r\n  wrapper: Window | HTMLElement\r\n  content: HTMLElement\r\n  width: number = 0\r\n  height: number = 0\r\n  scrollWidth: number = 0\r\n  scrollHeight: number = 0\r\n  debouncedResize?: Function\r\n  wrapperResizeObserver?: ResizeObserver\r\n  contentResizeObserver?: ResizeObserver\r\n\r\n  // @ts-ignore\r\n  constructor({\r\n    wrapper,\r\n    content,\r\n    autoResize = true,\r\n    debounce: debounceValue = 250,\r\n  }: DimensionsOptions = {}) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (autoResize) {\r\n      this.debouncedResize = debounce(this.resize, debounceValue)\r\n\r\n      if (this.wrapper === window) {\r\n        window.addEventListener(\r\n          'resize',\r\n          this.debouncedResize as EventListener,\r\n          false\r\n        )\r\n      } else {\r\n        this.wrapperResizeObserver = new ResizeObserver(\r\n          this.debouncedResize as ResizeObserverCallback\r\n        )\r\n        this.wrapperResizeObserver.observe(this.wrapper as HTMLElement)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(\r\n        this.debouncedResize as ResizeObserverCallback\r\n      )\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n    window.removeEventListener(\r\n      'resize',\r\n      this.debouncedResize as EventListener,\r\n      false\r\n    )\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else if (this.wrapper instanceof HTMLElement) {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.scrollHeight = this.content.scrollHeight\r\n      this.scrollWidth = this.content.scrollWidth\r\n    } else if (this.wrapper instanceof HTMLElement) {\r\n      this.scrollHeight = this.wrapper.scrollHeight\r\n      this.scrollWidth = this.wrapper.scrollWidth\r\n    }\r\n  }\r\n\r\n  get limit(): {\r\n    x: number\r\n    y: number\r\n  } {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n","export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n","export class Emitter {\r\n  events: Record<string, Function[]>\r\n\r\n  constructor() {\r\n    this.events = {}\r\n  }\r\n\r\n  emit(event: string, ...args: any[]) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  }\r\n\r\n  on(event: string, callback: Function) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(callback) || (this.events[event] = [callback])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n    }\r\n  }\r\n\r\n  off(event: string, callback: Function) {\r\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n  }\r\n\r\n  destroy() {\r\n    this.events = {}\r\n  }\r\n}\r\n","import { Emitter } from './emitter'\r\n\r\nconst LINE_HEIGHT = 100 / 6\r\n\r\nexport class VirtualScroll {\r\n  element: HTMLElement | Window\r\n  wheelMultiplier: number\r\n  touchMultiplier: number\r\n  touchStart: {\r\n    x: number | null\r\n    y: number | null\r\n  }\r\n  emitter: Emitter\r\n  lastDelta: {\r\n    x: number\r\n    y: number\r\n  } = {\r\n    x: 0,\r\n    y: 0,\r\n  }\r\n  windowWidth: number = 0\r\n  windowHeight: number = 0\r\n\r\n  constructor(\r\n    element: HTMLElement | Window,\r\n    { wheelMultiplier = 1, touchMultiplier = 1 }\r\n  ) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = new Emitter()\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n    this.onWindowResize()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel as EventListener, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener(\r\n      'touchstart',\r\n      this.onTouchStart as EventListener,\r\n      {\r\n        passive: false,\r\n      }\r\n    )\r\n    this.element.addEventListener(\r\n      'touchmove',\r\n      this.onTouchMove as EventListener,\r\n      {\r\n        passive: false,\r\n      }\r\n    )\r\n    this.element.addEventListener(\r\n      'touchend',\r\n      this.onTouchEnd as EventListener,\r\n      {\r\n        passive: false,\r\n      }\r\n    )\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event: string, callback: Function) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel as EventListener)\r\n    this.element.removeEventListener(\r\n      'touchstart',\r\n      this.onTouchStart as EventListener\r\n    )\r\n    this.element.removeEventListener(\r\n      'touchmove',\r\n      this.onTouchMove as EventListener\r\n    )\r\n    this.element.removeEventListener(\r\n      'touchend',\r\n      this.onTouchEnd as EventListener\r\n    )\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event: TouchEvent) => {\r\n    // @ts-expect-error\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX: 0,\r\n      deltaY: 0,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event: TouchEvent) => {\r\n    // @ts-expect-error\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - (this.touchStart?.x ?? 0)) * this.touchMultiplier\r\n    const deltaY = -(clientY - (this.touchStart?.y ?? 0)) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event: TouchEvent) => {\r\n    this.emitter.emit('scroll', {\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event: WheelEvent) => {\r\n    let { deltaX, deltaY, deltaMode } = event\r\n\r\n    const multiplierX =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.windowWidth : 1\r\n    const multiplierY =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.windowHeight : 1\r\n\r\n    deltaX *= multiplierX\r\n    deltaY *= multiplierY\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.windowWidth = window.innerWidth\r\n    this.windowHeight = window.innerHeight\r\n  }\r\n}\r\n","import { version } from '../../../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { Emitter } from './emitter'\r\nimport { clamp, modulo } from './maths'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explanation\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\ntype Overwrite<T, R> = Omit<T, keyof R> & R\r\n\r\ntype EasingFunction = (t: number) => number\r\ntype Orientation = 'vertical' | 'horizontal'\r\ntype GestureOrientation = 'vertical' | 'horizontal' | 'both'\r\ntype Scrolling = boolean | 'native' | 'smooth'\r\n\r\ntype onVirtualScrollOptions = {\r\n  deltaX: number\r\n  deltaY: number\r\n  event: WheelEvent | TouchEvent\r\n}\r\n\r\nexport type LenisOptions = Partial<{\r\n  wrapper: Window | HTMLElement\r\n  content: HTMLElement\r\n  wheelEventsTarget: Window | HTMLElement\r\n  eventsTarget: Window | HTMLElement\r\n  smoothWheel: boolean\r\n  syncTouch: boolean\r\n  syncTouchLerp: number\r\n  touchInertiaMultiplier: number\r\n  duration: number\r\n  easing: EasingFunction\r\n  lerp: number\r\n  infinite: boolean\r\n  orientation: Orientation\r\n  gestureOrientation: GestureOrientation\r\n  touchMultiplier: number\r\n  wheelMultiplier: number\r\n  autoResize: boolean\r\n  prevent: (node: Element) => boolean\r\n  virtualScroll: (data: onVirtualScrollOptions) => boolean\r\n  __experimental__naiveDimensions: boolean\r\n}>\r\n\r\nexport default class Lenis {\r\n  // __isSmooth: boolean = false // true if scroll should be animated\r\n  __isScrolling: Scrolling = false // true when scroll is animating\r\n  __isStopped: boolean = false // true if user should not be able to scroll - enable/disable programmatically\r\n  __isLocked: boolean = false // same as isStopped but enabled/disabled when scroll reaches target\r\n  __preventNextNativeScrollEvent?: boolean\r\n  __resetVelocityTimeout?: number\r\n\r\n  isTouching?: boolean\r\n  time: number\r\n  userData: Object = {}\r\n  lastVelocity: number = 0\r\n  velocity: number = 0\r\n  direction: 1 | -1 | 0 = 0\r\n  options: Overwrite<\r\n    LenisOptions,\r\n    {\r\n      wrapper: NonNullable<LenisOptions['wrapper']>\r\n    }\r\n  >\r\n  targetScroll: number\r\n  animatedScroll: number\r\n  animate: Animate\r\n  emitter: Emitter\r\n  dimensions: Dimensions\r\n  virtualScroll: VirtualScroll\r\n\r\n  constructor({\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper, // deprecated\r\n    eventsTarget = wheelEventsTarget,\r\n    smoothWheel = true,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.075,\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = 0.1,\r\n    infinite = false,\r\n    orientation = 'vertical', // vertical, horizontal\r\n    gestureOrientation = 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = 1,\r\n    autoResize = true,\r\n    prevent,\r\n    virtualScroll,\r\n    __experimental__naiveDimensions = false,\r\n  }: LenisOptions = {}) {\r\n    // @ts-expect-error\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (\r\n      !wrapper ||\r\n      wrapper === document.documentElement ||\r\n      wrapper === document.body\r\n    ) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      eventsTarget,\r\n      smoothWheel,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      autoResize,\r\n      prevent,\r\n      virtualScroll,\r\n      __experimental__naiveDimensions,\r\n    } as LenisOptions\r\n\r\n    this.animate = new Animate()\r\n    this.emitter = new Emitter()\r\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\r\n    // this.toggleClassName('lenis', true)\r\n    this.updateClassName()\r\n\r\n    this.userData = {}\r\n    this.time = 0\r\n    this.velocity = this.lastVelocity = 0\r\n    this.isLocked = false\r\n    this.isStopped = false\r\n    // this.hasScrolled = false\r\n    // this.isSmooth = syncTouch || smoothWheel\r\n    // this.isSmooth = false\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onNativeScroll, false)\r\n\r\n    this.options.wrapper.addEventListener(\r\n      'pointerdown',\r\n      this.onPointerDown as EventListener,\r\n      false\r\n    )\r\n\r\n    this.virtualScroll = new VirtualScroll(eventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.options.wrapper.removeEventListener(\r\n      'scroll',\r\n      this.onNativeScroll,\r\n      false\r\n    )\r\n    this.options.wrapper.removeEventListener(\r\n      'pointerdown',\r\n      this.onPointerDown as EventListener,\r\n      false\r\n    )\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.cleanUpClassName()\r\n\r\n    // this.rootElement.className = ''\r\n\r\n    // this.toggleClassName('lenis', false)\r\n    // this.toggleClassName('lenis-smooth', false)\r\n    // this.toggleClassName('lenis-scrolling', false)\r\n    // this.toggleClassName('lenis-stopped', false)\r\n    // this.toggleClassName('lenis-locked', false)\r\n  }\r\n\r\n  on(event: string, callback: Function) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event: string, callback: Function) {\r\n    return this.emitter.off(event, callback)\r\n  }\r\n\r\n  private setScroll(scroll: number) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  private onPointerDown = (event: PointerEvent | MouseEvent) => {\r\n    if (event.button === 1) {\r\n      this.reset()\r\n    }\r\n  }\r\n\r\n  private onVirtualScroll = (data: onVirtualScrollOptions) => {\r\n    if (\r\n      typeof this.options.virtualScroll === 'function' &&\r\n      this.options.virtualScroll(data) === false\r\n    )\r\n      return\r\n\r\n    const { deltaX, deltaY, event } = data\r\n\r\n    this.emitter.emit('virtual-scroll', { deltaX, deltaY, event })\r\n\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = event.type.includes('touch')\r\n    const isWheel = event.type.includes('wheel')\r\n\r\n    this.isTouching = event.type === 'touchstart' || event.type === 'touchmove'\r\n    // if (event.type === 'touchend') {\r\n    //   console.log('touchend', this.scroll)\r\n    //   // this.lastVelocity = this.velocity\r\n    //   // this.velocity = 0\r\n    //   // this.isScrolling = false\r\n    //   this.emit({ type: 'touchend' })\r\n    //   // alert('touchend')\r\n    //   return\r\n    // }\r\n\r\n    const isTapToStop =\r\n      this.options.syncTouch &&\r\n      isTouch &&\r\n      event.type === 'touchstart' &&\r\n      !this.isStopped &&\r\n      !this.isLocked\r\n\r\n    if (isTapToStop) {\r\n      this.reset()\r\n      return\r\n    }\r\n\r\n    const isClick = deltaX === 0 && deltaY === 0 // click event\r\n\r\n    // const isPullToRefresh =\r\n    //   this.options.gestureOrientation === 'vertical' &&\r\n    //   this.scroll === 0 &&\r\n    //   !this.options.infinite &&\r\n    //   deltaY <= 5 // touch pull to refresh, not reliable yet\r\n\r\n    const isUnknownGesture =\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\r\n\r\n    if (isClick || isUnknownGesture) {\r\n      // console.log('prevent')\r\n      return\r\n    }\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    let composedPath = event.composedPath()\r\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\r\n\r\n    const prevent = this.options.prevent\r\n\r\n    if (\r\n      !!composedPath.find(\r\n        (node) =>\r\n          node instanceof Element &&\r\n          ((typeof prevent === 'function' && prevent?.(node)) ||\r\n            node.hasAttribute?.('data-lenis-prevent') ||\r\n            (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\r\n            (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\r\n            (node.classList?.contains('lenis') &&\r\n              !node.classList?.contains('lenis-stopped'))) // nested lenis instance\r\n      )\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault() // this will stop forwarding the event to the parent, this is problematic\r\n      return\r\n    }\r\n\r\n    const isSmooth =\r\n      (this.options.syncTouch && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!isSmooth) {\r\n      this.isScrolling = 'native'\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const isTouchEnd = isTouch && event.type === 'touchend'\r\n\r\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 5\r\n\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch\r\n        ? {\r\n            lerp: hasTouchInertia ? this.options.syncTouchLerp : 1,\r\n          }\r\n        : {\r\n            lerp: this.options.lerp,\r\n            duration: this.options.duration,\r\n            easing: this.options.easing,\r\n          }),\r\n    })\r\n  }\r\n\r\n  resize() {\r\n    this.dimensions.resize()\r\n  }\r\n\r\n  private emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  private onNativeScroll = () => {\r\n    clearTimeout(this.__resetVelocityTimeout)\r\n    delete this.__resetVelocityTimeout\r\n\r\n    if (this.__preventNextNativeScrollEvent) {\r\n      delete this.__preventNextNativeScrollEvent\r\n      return\r\n    }\r\n\r\n    if (this.isScrolling === false || this.isScrolling === 'native') {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.lastVelocity = this.velocity\r\n      this.velocity = this.animatedScroll - lastScroll\r\n      this.direction = Math.sign(\r\n        this.animatedScroll - lastScroll\r\n      ) as Lenis['direction']\r\n      // this.isSmooth = false\r\n      this.isScrolling = 'native'\r\n      this.emit()\r\n\r\n      if (this.velocity !== 0) {\r\n        this.__resetVelocityTimeout = setTimeout(() => {\r\n          this.lastVelocity = this.velocity\r\n          this.velocity = 0\r\n          this.isScrolling = false\r\n          this.emit()\r\n        }, 400)\r\n      }\r\n\r\n      // this.hasScrolled = true\r\n      // }, 50)\r\n    }\r\n  }\r\n\r\n  private reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.animatedScroll = this.targetScroll = this.actualScroll\r\n    this.lastVelocity = this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    if (!this.isStopped) return\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    if (this.isStopped) return\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time: number) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target: number | string | HTMLElement,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = this.options.lerp,\r\n      onStart,\r\n      onComplete,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n      userData = {},\r\n    }: {\r\n      offset?: number\r\n      immediate?: boolean\r\n      lock?: boolean\r\n      duration?: number\r\n      easing?: EasingFunction\r\n      lerp?: number\r\n      onStart?: (lenis: Lenis) => void\r\n      onComplete?: (lenis: Lenis) => void\r\n      force?: boolean\r\n      programmatic?: boolean\r\n      userData?: object\r\n    } = {}\r\n  ) {\r\n    if ((this.isStopped || this.isLocked) && !force) return\r\n\r\n    // keywords\r\n    if (\r\n      typeof target === 'string' &&\r\n      ['top', 'left', 'start'].includes(target)\r\n    ) {\r\n      target = 0\r\n    } else if (\r\n      typeof target === 'string' &&\r\n      ['bottom', 'right', 'end'].includes(target)\r\n    ) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target instanceof HTMLElement && target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.rootElement.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (target === this.targetScroll) return\r\n\r\n    this.userData = userData\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      this.preventNextNativeScrollEvent()\r\n      this.emit()\r\n      onComplete?.(this)\r\n      this.userData = {}\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onStart: () => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = 'smooth'\r\n        onStart?.(this)\r\n      },\r\n      onUpdate: (value: number, completed: boolean) => {\r\n        this.isScrolling = 'smooth'\r\n\r\n        // updated\r\n        this.lastVelocity = this.velocity\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity) as Lenis['direction']\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        if (!completed) this.emit()\r\n\r\n        if (completed) {\r\n          this.reset()\r\n          this.emit()\r\n          onComplete?.(this)\r\n          this.userData = {}\r\n\r\n          // avoid emitting event twice\r\n          this.preventNextNativeScrollEvent()\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  private preventNextNativeScrollEvent() {\r\n    this.__preventNextNativeScrollEvent = true\r\n\r\n    requestAnimationFrame(() => {\r\n      delete this.__preventNextNativeScrollEvent\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return (\r\n      this.options.wrapper === window\r\n        ? document.documentElement\r\n        : this.options.wrapper\r\n    ) as HTMLElement\r\n  }\r\n\r\n  get limit() {\r\n    if (this.options.__experimental__naiveDimensions) {\r\n      if (this.isHorizontal) {\r\n        return this.rootElement.scrollWidth - this.rootElement.clientWidth\r\n      } else {\r\n        return this.rootElement.scrollHeight - this.rootElement.clientHeight\r\n      }\r\n    } else {\r\n      return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\r\n    }\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll(): number {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll(): number {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress(): number {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  // get isSmooth() {\r\n  //   return this.__isSmooth\r\n  // }\r\n\r\n  // private set isSmooth(value: boolean) {\r\n  //   if (this.__isSmooth !== value) {\r\n  //     this.__isSmooth = value\r\n  //     this.updateClassName()\r\n  //   }\r\n  // }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  private set isScrolling(value: Scrolling) {\r\n    if (this.__isScrolling !== value) {\r\n      this.__isScrolling = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  private set isStopped(value: boolean) {\r\n    if (this.__isStopped !== value) {\r\n      this.__isStopped = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isLocked() {\r\n    return this.__isLocked\r\n  }\r\n\r\n  private set isLocked(value: boolean) {\r\n    if (this.__isLocked !== value) {\r\n      this.__isLocked = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.isScrolling === 'smooth'\r\n  }\r\n\r\n  get className() {\r\n    let className = 'lenis'\r\n    if (this.isStopped) className += ' lenis-stopped'\r\n    if (this.isLocked) className += ' lenis-locked'\r\n    if (this.isScrolling) className += ' lenis-scrolling'\r\n    if (this.isScrolling === 'smooth') className += ' lenis-smooth'\r\n    // if (this.isScrolling === 'native') className += ' lenis-native'\r\n    // if (this.isSmooth) className += ' lenis-smooth'\r\n    return className\r\n  }\r\n\r\n  private updateClassName() {\r\n    this.cleanUpClassName()\r\n\r\n    this.rootElement.className =\r\n      `${this.rootElement.className} ${this.className}`.trim()\r\n  }\r\n\r\n  private cleanUpClassName() {\r\n    this.rootElement.className = this.rootElement.className\r\n      .replace(/lenis(-\\w+)?/g, '')\r\n      .trim()\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}